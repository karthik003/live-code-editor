{"version":3,"sources":["components/Navbar.js","components/CodeEditor.js","components/LiveView.js","hooks/useLocalStorage.js","components/Main.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","style","textAlign","color","backgroundColor","width","height","lineHeight","CodeEditor","props","language","displayName","value","onChange","useState","useEffect","float","border","onBeforeChange","editor","data","options","lineWrapping","lint","mode","theme","lineNumbers","LiveView","console","log","srcDoc","title","sandbox","frameBorder","useLocalStorage","key","initialValue","jsonValue","localStorage","getItem","JSON","parse","setValue","setItem","stringify","Main","html","setHtml","css","setCss","js","setJs","setSrcDoc","fileType","setFileType","fileName","handleClick","id","document","getElementById","handleBgColor","file","innerHTML","substring","className","onClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.8a500e01.chunk.js","sourcesContent":["import React from 'react'\r\nimport \"./Navbar.css\"\r\nfunction Navbar() {\r\n    return (\r\n        <div style={{textAlign:\"center\",color:\"white\",backgroundColor:\"black\",width:\"100%\",height:\"50px\",lineHeight:\"50px\"}}>\r\n           Code Editor \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Navbar\r\n","import React, { useState,useEffect,Component } from 'react';\r\nimport { Controlled as CodeMirror } from 'react-codemirror2'\r\nimport 'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/mode/xml/xml';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/mode/css/css';\r\n\r\nfunction CodeEditor(props) {\r\nconst {language,displayName,value,onChange}=props;\r\nconst [codeValue, setCodeValue]=useState(0);\r\nuseEffect(() => {\r\n    // console.log(\"value:\",value)\r\n  });\r\nconst handleChange=(editor,data,value)=>{\r\n    onChange(value)\r\n}\r\n    return (\r\n        <div style={{height:\"100vh\",backgroundColor:\"black\",float:\"left\",color:\"white\",width:\"40%\",border:\"1px solid #373737\",textAlign:\"left\"}}>\r\n            <div style={{textAlign:\"center\"}}> {displayName} Editor</div>\r\n\r\n                <CodeMirror\r\n                    onBeforeChange={handleChange}\r\n                    value={value}\r\n                    options={{\r\n                        lineWrapping: true,\r\n                        lint: true,\r\n                        mode: language,\r\n                        theme: 'material',\r\n                        lineNumbers: true\r\n                    }}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CodeEditor","import React,{useState,useEffect} from 'react'\r\nimport ReactSrcDocIframe from 'react-srcdoc-iframe';\r\nfunction LiveView(props) {\r\n    const [code,setCode]= useState('')\r\n    useEffect(() => {\r\n        console.log(\"srcDoc\",props.srcDoc)\r\n    }, [])\r\n    return (\r\n        <div style={{height:\"100vh\",float:\"left\",color:\"white\",width:\"40%\",border:\"1px solid #373737\"}}>\r\n            <div style={{textAlign:\"center\",backgroundColor:\"black\"}}> Live View</div>\r\n            <br />\r\n            {/* <iframe \r\n            srcDoc={code}\r\n            // srcDoc=\"<h1>hello</h1>\"\r\n            id=\"live-view\"\r\n            title=\"Live-View\" \r\n            style={{backgroundColor:\"white\",border:'1px solid red',width:\"99%\",height:\"96%\"}}>\r\n                Hello   \r\n            </iframe> */}\r\n            <iframe\r\n                srcDoc={props.srcDoc}\r\n                title=\"output\"\r\n                sandbox=\"allow-scripts\"\r\n                frameBorder=\"0\"\r\n                style={{width:\"99%\",height:\"96%\"}}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default LiveView\r\n","import { useEffect, useState } from 'react'\r\n\r\n\r\nexport default function useLocalStorage(key, initialValue) {\r\n\r\n  const [value, setValue] = useState(() => {\r\n    const jsonValue = localStorage.getItem(key)\r\n    if (jsonValue != null){ \r\n      return JSON.parse(jsonValue)\r\n    }\r\n    else{\r\n      return '';\r\n    }\r\n    // if (typeof initialValue === 'function') {\r\n    //   return initialValue()\r\n    // } else {\r\n    //   return initialValue\r\n    // }\r\n  })\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(value))\r\n  }, [key, value])\r\n\r\n  return [value, setValue]\r\n}","import React,{useState,useEffect} from 'react';\r\nimport Navbar from './Navbar';\r\nimport CodeEditor from './CodeEditor';\r\nimport LiveView from './LiveView';\r\nimport useLocalStorage from '../hooks/useLocalStorage'\r\nimport './Main.css'\r\nfunction Main() {\r\n  const [lang, setLang] = useState('')\r\n  const [html, setHtml] = useLocalStorage('html', '')\r\n  const [css, setCss] = useLocalStorage('css', '')\r\n  const [js, setJs] = useLocalStorage('js', '')\r\n  const [srcDoc, setSrcDoc] = useState('')\r\n  const [fileType, setFileType] = useState('')\r\n  useEffect(() => {\r\n    const fileName=localStorage.getItem(\"file\");\r\n    setFileType(fileName)\r\n    console.log(\"file:\",fileType)\r\n      setSrcDoc(`\r\n        <html>\r\n          <body>${html}</body>\r\n          <style>${css}</style>\r\n          <script>${js}</script>\r\n        </html>\r\n      `)\r\n  }, [html, css, js,fileType])\r\n\r\n    \r\nconst handleBgColor=(id)=>{\r\n  if(id===1){\r\n      document.getElementById(2).style.backgroundColor=\"\";\r\n      document.getElementById(3).style.backgroundColor=\"\";\r\n      document.getElementById(2).style.color=\"\";\r\n      document.getElementById(3).style.color=\"\";\r\n  }\r\n  else if(id===2){\r\n      document.getElementById(1).style.backgroundColor=\"\";\r\n      document.getElementById(3).style.backgroundColor=\"\";\r\n      document.getElementById(1).style.color=\"\";\r\n      document.getElementById(3).style.color=\"\";\r\n\r\n  }\r\n  else if(id===3){\r\n      document.getElementById(2).style.backgroundColor=\"\";\r\n      document.getElementById(1).style.backgroundColor=\"\";\r\n      document.getElementById(2).style.color=\"\";\r\n      document.getElementById(1).style.color=\"\";\r\n  }\r\n}\r\n\r\nconst handleClick=(id)=>{\r\n  handleBgColor(id);\r\n  document.getElementById(id).style.backgroundColor=\"#373737\";\r\n  document.getElementById(id).style.color=\"white\";\r\n  const file = document.getElementById(id).innerHTML;\r\n  setFileType(file.substring(6))\r\n  localStorage.setItem(\"file\",file.substring(6))\r\n}\r\n  return (\r\n    <div className=\"App\">\r\n      <Navbar />\r\n      <div style={{height:\"100vh\",backgroundColor:\"black\",float:\"left\",color:\"white\",width:\"19.6%\",border:\"1px solid #373737\"}}>\r\n            File Explorer<br /><br />\r\n            <div className=\"file-names\">\r\n                <div className=\"file\" id=\"1\" onClick={()=>handleClick(1)}>index.html</div>\r\n                <div className=\"file\" id=\"2\" onClick={()=>handleClick(2)}>index.css</div>\r\n                <div className=\"file\" id=\"3\" onClick={()=>handleClick(3)}>index.js</div>\r\n            </div>\r\n        </div>\r\n        \r\n      {fileType===\"html\" && \r\n        <CodeEditor language=\"xml\" value={html}  onChange={setHtml} displayName=\"HTML\" />\r\n      }\r\n      {fileType===\"css\" && \r\n        <CodeEditor language=\"css\" value={css}  onChange={setCss} displayName=\"CSS\" />\r\n      }\r\n      {fileType===\"js\" && \r\n        <CodeEditor language=\"javascript\" value={js}  onChange={setJs} displayName=\"JS\" />\r\n      }\r\n      <LiveView srcDoc={srcDoc}/>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Main from './components/Main'\r\n\r\nfunction App() {\r\n \r\n  return (\r\n    <div className=\"App\">\r\n      <Main />\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}